@model CheckArgentina.Models.LodgingModel
@using CheckArgentina.Commons

<div class="lodging-container">
    <div class="lodging-header rounded roundedOrange">
        @Html.Label(Model.LodgingName).AddClasses("lodging-name")

        <div class="lodging-category rounded roundedWhite">
            @Html.Image(@Url.Content(CheckArgentina.Models.LodgingModel.GetCategoryImage(Model.LodgingCategory)))
        </div>
    </div>
    <div class="lodging-body rounded roundedWhite">
        <div class="lodging-photo">
            @Html.Image((!string.IsNullOrEmpty(Model.LodgingPhoto) ? Url.Content(Model.LodgingPhoto) : Url.Content("~/Content/Images/Fachada_G.jpg")), string.Empty).AddClasses("photo rounded roundedWhite")
        </div>

        <div class="lodging-description rounded roundedWhite">
            @*<div class="scrollbar"><div class="track"><div class="thumb"><div class="end"></div></div></div></div>
	        <div class="viewport">
		        <div class="overview">
			        @Html.DisplayTextFor(m => m.LodgingDescription).AddAttribute("readonly", "true").AddInlineStyles("background-color:transparent;border:0;margin:5px;")
		        </div>
	        </div>*@
            <div style="padding: 4px;">
                @Html.DisplayTextFor(m => m.LodgingDescription).AddAttribute("readonly", "true").AddInlineStyles("background-color:transparent;border:0;margin:5px;")
            </div>
        </div>
        <div class="lodging-reserve rounded roundedWhite">
            <div class="lodging-price">
                @Html.Label(string.Format("{0} {1}", Model.LodgingCurrency, Model.LodgingPrice))
            </div>
            <div class="lodging-price-note">
                @Html.Label("promedio p/noche impuestos incluidos")
            </div>
            @if (Model.Vacancies.Count() != 0)
            {
            <div class="lodging-reserve-button">
                @Html.Button("RESERVAR").AddId("btnReserve_" + Model.LodgingId).AddClasses("rounded roundedOrange").AddAttribute("onclick", string.Format("javascript:$('#span_{0}').click(); return false;", Model.LodgingId))
            </div>
            }
        </div>
    </div>
    @*<div class="lodging-footer">
        <div class="lodging-category">
            @Html.Image(@Url.Content(CheckArgentina.Models.LodgingModel.GetCategoryImage(Model.LodgingCategory)))
        </div>
        <div class="lodging-commentaries">
            @Html.Image("~/Content/Images/Commentaries.png")
        </div>
    </div>*@
    @if (Model.Vacancies.Count() != 0)
    {
        using (@Html.BeginForm("Confirmation", "Payment"))
        {
    <div id="@string.Format("Lodging_{0}", Model.LodgingId)" class="lodging-vacancy-container rounded roundedBlue">
    
        @Html.HiddenFor(m => m.LodgingId)
        @Html.HiddenFor(m => m.LodgingName)
        @Html.HiddenFor(m => m.LodgingCategory)
        @Html.HiddenFor(m => m.LodgingCurrency)
        @Html.HiddenFor(m => m.LodgingPrice)
        @Html.HiddenFor(m => m.DestinationId)
        @Html.HiddenFor(m => m.LodgingSupplierId)

        <span id="@string.Format("span_{0}", Model.LodgingId)">Disponibilidad</span>
        
        <div class="lodging-vacancy rounded roundedWhite">
            <div class="lodging-vacancy-detail" style="font-weight: bold;">
                <div class="lodging-vacancy-select">
                    @Html.Label("Cantidad")
                </div>
                <div class="lodging-vacancy-description">
                    @Html.Label("Descripción")
                </div>
                <div class="lodging-vacancy-date" style="border-style: none;">
                    @Html.Label("Checkin")
                </div>
                <div class="lodging-vacancy-date" style="border-style: none;">
                    @Html.Label("Checkout")
                </div>
                <div class="lodging-vacancy-price">
                    @Html.Label("Total")
                </div>
            </div>

            <ul class="lodging-vacancy-list">
            @{
            for (int i = 0; i < Model.Vacancies.Count(); i++)
            {
                <li class="lodging-vacancy-list-element">
                    @Html.HiddenFor(m => m.LodgingId)
                    @Html.HiddenFor(m => m.LodgingName)
                    @Html.HiddenFor(m => m.LodgingCategory)
                    @Html.HiddenFor(m => m.LodgingCurrency)
                    @Html.HiddenFor(m => m.LodgingPrice)
                    
                    @Html.HiddenFor(m => m.Vacancies[i].LodgingId)
                    @Html.HiddenFor(m => m.Vacancies[i].LodgingName)
                    @Html.HiddenFor(m => m.Vacancies[i].LodgingCurrency)

                    @Html.HiddenFor(m => m.Vacancies[i].VacancyId)
                    @Html.HiddenFor(m => m.Vacancies[i].VacancyName)
                    @Html.HiddenFor(m => m.Vacancies[i].VacancyCheckin)
                    @Html.HiddenFor(m => m.Vacancies[i].VacancyCheckout)
                    @Html.HiddenFor(m => m.Vacancies[i].VacancyPrice)

                    @{
                        for(int j = 0; j < Model.Vacancies[i].Rooms.Count(); j++)
                        {
                            @Html.HiddenFor(m => m.Vacancies[i].Rooms[j].RoomId)
                            @Html.HiddenFor(m => m.Vacancies[i].Rooms[j].RoomName)
                            @Html.HiddenFor(m => m.Vacancies[i].Rooms[j].RoomType)
                        }  
                    }

                    <div class="lodging-vacancy-detail">
                        <div class="lodging-vacancy-select">
                            @*@Html.CheckBoxFor(m => m.Vacancies[i].VacancySelected)*@
                            @Html.Button("-").AddClasses("roundedOrange count-button-left").AddAttribute("onclick", string.Format("javascript:decreaseVacancyReserve('#Lodging_{0}', '#Vacancies_{1}__VacancyReserved')", Model.LodgingId, i))
                            @Html.TextBoxFor(m => m.Vacancies[i].VacancyReserved).AddClasses("count-textbox")
                            @Html.Button("+").AddClasses("roundedOrange count-button-right").AddAttribute("onclick", string.Format("javascript:increaseVacancyReserve('#Lodging_{0}', '#Vacancies_{1}__VacancyReserved', {2})", Model.LodgingId, i, Model.Vacancies[i].VacancyCount))
                        </div>
                        <div class="lodging-vacancy-description">
                            @Html.Label(Model.Vacancies[i].VacancyName)
                        </div>
                        <div class="lodging-vacancy-date">
                            @Html.Label(Model.Vacancies[i].VacancyCheckin.ToString("dd/MM/yy"))
                        </div>
                        <div class="lodging-vacancy-date">
                            @Html.Label(Model.Vacancies[i].VacancyCheckout.ToString("dd/MM/yy"))
                        </div>
                        <div class="lodging-vacancy-price">
                            @Html.Label(string.Format("{0}\t{1:0.00}", Model.LodgingCurrency, Model.Vacancies[i].VacancyPrice * Model.Vacancies[i].VacancyDates.Count))
                        </div>
                    </div>
                    @*@{
                        Html.RenderPartial("VacancyDetail", vacancy);
                    }*@
                </li>                    
            }
            }
            </ul>
            
            @Html.Button("RESERVAR", true).AddId("btnReserve_Disp_" + Model.LodgingId).AddClasses("rounded roundedOrange").AddInlineStyles("float:right;")

            <div class="clear">
            </div>
        </div>
    </div>
            Html.EndForm();
        }
    }
</div>